created: 20230825035114808
modified: 20230825050644283
tags: kernel linux
title: LKD 第5章 系统调用
type: text/vnd.tiddlywiki

syscall是一些需要提供给用户进程的服务，它们的实现往往需要一些特权，所以区别于一般的用户函数，需要在内核执行，同时又要对用户进行限制，不能让应用程序恣意妄行。

!! 5.1 5.2 看书

其中提到一个Unix接口设计格言“提供机制而不是策略”。机制即“需要提供什么功能”，策略即“怎样实现这些功能”。将二者分开会让开发软件更容易，更容易适应不同需求。

!! 5.3 系统调用

内核中提供了定义系统调用的宏，如SYSCALL_DEFINE0。系统调用的命名规则是sys_bar()。

!!! 5.3.1 系统调用号

唯一地代表一个系统调用，一经分配就不能再有更变（兼容性）。系统调用列表在sys_call_table中，这是体系结构相关的，如x86_64的定义在arch/x86/kernel/syscall_64.c中。

!!! 5.3.2 Linux系统调用很快

!! 5.4 系统调用处理程序

用户需要通知内核，自己需要执行一个系统调用。通知内核的机制是靠软中断实现的，通过引发异常使系统切换到内核态执行异常处理程序。x86的软中断是128，通过int $0x80触发中断。而128号异常处理程序正是系统调用处理程序，处理程序名字就是system_call()，在x86_64上在entry_64.S中用汇编编写。

x86处理器后来增加一条叫sysenter的指令，更快更专业。

!!! 5.4.1 指定恰当的系统调用

就是通过系统调用号，在训